/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package src;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author Jose
 */
public class frmPruebaTdaColaSimple extends javax.swing.JFrame {

    TdaColaSimple tcs = new TdaColaSimple(6);
    private ImageIcon iconoAuto;
    private int gasolinaA;
    private int gasolinaB;
    private int gasolinaC;
    //ArrayList<JLabel> listaDeAutos = new ArrayList<>();

    /**
     * Creates new form frmPruebaTdaColaSimple
     */
    public frmPruebaTdaColaSimple() {
        initComponents();
        this.setTitle("PruebaTdaColaSimple");
        this.setLocationRelativeTo(null);
        // Cargar la imagen del auto
        iconoAuto = new ImageIcon(getClass().getResource("/img/carro.png"));  // Ajusta la ruta de la imagen

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panCola = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblFrente = new javax.swing.JLabel();
        lblFin = new javax.swing.JLabel();
        lblGasera = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mniAcercade = new javax.swing.JMenuItem();
        mniSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mniLlegaAuto = new javax.swing.JMenuItem();
        mniDespacharGasolina = new javax.swing.JMenuItem();
        mniInicializarCola = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panCola.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblTitulo.setText("Gasolineria");

        lblFrente.setText("frente:");

        lblFin.setText("Fin = -1;");

        lblGasera.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gasolinera.png"))); // NOI18N

        javax.swing.GroupLayout panColaLayout = new javax.swing.GroupLayout(panCola);
        panCola.setLayout(panColaLayout);
        panColaLayout.setHorizontalGroup(
            panColaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panColaLayout.createSequentialGroup()
                .addGroup(panColaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panColaLayout.createSequentialGroup()
                        .addGap(332, 332, 332)
                        .addGroup(panColaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFrente)
                            .addComponent(lblFin)))
                    .addGroup(panColaLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(panColaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblGasera)
                            .addComponent(lblTitulo))))
                .addContainerGap(341, Short.MAX_VALUE))
        );
        panColaLayout.setVerticalGroup(
            panColaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panColaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblGasera)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 211, Short.MAX_VALUE)
                .addComponent(lblFrente)
                .addGap(27, 27, 27)
                .addComponent(lblFin)
                .addGap(20, 20, 20))
        );

        jMenu1.setText("Archivo");

        mniAcercade.setText("Acerca de");
        mniAcercade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAcercadeActionPerformed(evt);
            }
        });
        jMenu1.add(mniAcercade);

        mniSalir.setText("Salir");
        mniSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniSalirActionPerformed(evt);
            }
        });
        jMenu1.add(mniSalir);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Acciones");

        mniLlegaAuto.setText("Llega Auto");
        mniLlegaAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniLlegaAutoActionPerformed(evt);
            }
        });
        jMenu2.add(mniLlegaAuto);

        mniDespacharGasolina.setText("Despachar gasolina");
        mniDespacharGasolina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDespacharGasolinaActionPerformed(evt);
            }
        });
        jMenu2.add(mniDespacharGasolina);

        mniInicializarCola.setText("Inicializar cola");
        mniInicializarCola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniInicializarColaActionPerformed(evt);
            }
        });
        jMenu2.add(mniInicializarCola);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(panCola, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(69, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(panCola, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniSalirActionPerformed
        // Calcular cu?l es la gasolina menos vendida
        String menosVendida;
        if (gasolinaA <= gasolinaB && gasolinaA <= gasolinaC) {
            menosVendida = "Gasolina A";
        } else if (gasolinaB <= gasolinaA && gasolinaB <= gasolinaC) {
            menosVendida = "Gasolina B";
        } else {
            menosVendida = "Gasolina C";
        }

        // Mostrar las estad?sticas en un cuadro de di?logo
        String mensaje = String.format("Estad?sticas de ventas:\n"
                + "Gasolina A: %d litros\n"
                + "Gasolina B: %d litros\n"
                + "Gasolina C: %d litros\n"
                + "Gasolina menos vendida: %s",
                gasolinaA, gasolinaB, gasolinaC, menosVendida);

        JOptionPane.showMessageDialog(this, mensaje);

        // Cerrar el programa
        System.exit(0);
    }//GEN-LAST:event_mniSalirActionPerformed

    private void mniAcercadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAcercadeActionPerformed
        JOptionPane.showMessageDialog(null, "Nombre del programa: Prueba TDA Cola Simple\n"
                + "Versi?n: 1.0\n"
                + "Programadores: Morales Prado Erik Rodrigo\n"
                + "               Albor Villalobos Geovanni Santiago\n"
                + "               Jose Armando Sandoval Santana\n"
                + "Fecha: " + "09/10/24");
    }//GEN-LAST:event_mniAcercadeActionPerformed

    private void mniLlegaAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniLlegaAutoActionPerformed
        // Verificar si la cola est? llena
        if (!tcs.colaLlena()) {
            JLabel lblAuto = new JLabel(iconoAuto);
            panCola.add(lblAuto);
            tcs.insertar(lblAuto);
            animateCar(lblAuto, tcs.getFin());
            panCola.revalidate();
            panCola.repaint();
            actualizarEtiquetas();
        } else {
            JOptionPane.showMessageDialog(null, "Cola llena");
        }
    }//GEN-LAST:event_mniLlegaAutoActionPerformed

    private void mniInicializarColaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniInicializarColaActionPerformed
        // Verificar si hay autos en la cola antes de inicializar
        if (!tcs.colaVacia()) {
            // Mostrar mensaje de que la gasolina se ha terminado
            JOptionPane.showMessageDialog(this, "La gasolina se ha terminado. Los autos desaparecer?n.");

            // Eliminar todos los autos visualmente
            eiminarAutosVisualmente();

            // Eliminar los autos de la l?gica de la cola
            while (!tcs.colaVacia()) {
                tcs.quitar();  // Remover los autos de la estructura de cola (l?gica)
            }
        }

        // Inicializar la cola
        tcs.inicializarCola();

        // Actualizar etiquetas de frente y fin
        actualizarEtiquetas();
    }//GEN-LAST:event_mniInicializarColaActionPerformed

    private void mniDespacharGasolinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDespacharGasolinaActionPerformed
        // Verificar si hay autos en la cola
        if (!tcs.colaVacia()) {
            // Mostrar el JDialog para capturar la informaci?n
            dlgDespacharGasolina dialog = new dlgDespacharGasolina(this, true);
            dialog.setVisible(true);

            // Verificar si el usuario ha ingresado los datos correctamente
            String litros = dialog.getTxtLitros().getText();
            String tipoGasolina = (String) dialog.getCmbTipoGasolina().getSelectedItem();

            if (!litros.isEmpty() && tipoGasolina != null) {
                // Convertir los litros a un entero
                int cantidadLitros = Integer.parseInt(litros);

                // Registrar la venta en las estad?sticas
                registrarVenta(tipoGasolina, cantidadLitros);

                // Animar el auto hacia la izquierda hasta que desaparezca
                JLabel lblAuto = obtenerAutoEnFrente();  // Obtener el auto que est? al frente
                animateCarSalida(lblAuto);

                // Eliminar el auto de la cola
                tcs.quitar();

                moverAutosAdelante();

                // Actualizar las etiquetas de frente y fin
                actualizarEtiquetas();
            } else {
                JOptionPane.showMessageDialog(this, "Por favor ingrese todos los datos.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "No hay autos en la cola.");
        }
    }//GEN-LAST:event_mniDespacharGasolinaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPruebaTdaColaSimple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPruebaTdaColaSimple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPruebaTdaColaSimple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPruebaTdaColaSimple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPruebaTdaColaSimple().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel lblFin;
    private javax.swing.JLabel lblFrente;
    private javax.swing.JLabel lblGasera;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JMenuItem mniAcercade;
    private javax.swing.JMenuItem mniDespacharGasolina;
    private javax.swing.JMenuItem mniInicializarCola;
    private javax.swing.JMenuItem mniLlegaAuto;
    private javax.swing.JMenuItem mniSalir;
    private javax.swing.JPanel panCola;
    // End of variables declaration//GEN-END:variables

    // M?todo para animar el movimiento del auto en la cola
    private void animateCar2(JLabel lblAuto, int targetX) {
        int initialX = lblAuto.getX();  // Posici?n inicial del auto

        Timer timer = new Timer(10, new ActionListener() {
            int posX = initialX;

            @Override
            public void actionPerformed(ActionEvent e) {
                if (posX > targetX) {
                    posX -= 2;  // Ajustar la velocidad de movimiento hacia la izquierda
                    lblAuto.setBounds(posX, lblAuto.getY(), lblAuto.getPreferredSize().width, lblAuto.getPreferredSize().height);
                } else {
                    ((Timer) e.getSource()).stop();  // Detener el timer cuando llega a la posici?n final
                }
            }
        });

        timer.start();  // Iniciar la animaci?n
    }

    private void animateCar(JLabel lblAuto, int posicionCola) {
        int targetX = calcularPosicionCola(posicionCola);  // Calcular la posici?n en la cola
        int initialX = panCola.getWidth();  // Posici?n inicial fuera del panel (extremo derecho)

        Timer timer = new Timer(10, new ActionListener() {
            int posX = initialX;

            @Override
            public void actionPerformed(ActionEvent e) {
                if (posX > targetX) {
                    posX -= 2;  // Ajustar la velocidad de movimiento
                    lblAuto.setBounds(posX, 150, lblAuto.getPreferredSize().width, lblAuto.getPreferredSize().height);
                } else {
                    ((Timer) e.getSource()).stop();  // Detener el timer cuando llega a la posici?n final
                    System.out.println("Posici?n final X: " + posX);
                }
            }
        });

        timer.start();  // Iniciar la animaci?n
    }

    private void moverAutosAdelante() {
        // Obtener el tamanio de la cola
        int tamanio = getTamanio();

        // Movemos el primer auto
        if (tamanio > 0) {
            // Obtenemos el auto que esta al frente
            JLabel primerAuto = obtenerAuto(0);
            animateCar2(primerAuto, 45);

            // Mover los autos restantes
            for (int i = 1; i < tamanio; i++) {
                JLabel autoActual = obtenerAuto(i);
                JLabel autoAnterior = obtenerAuto(i - 1); // El auto que estaba delante
                int nuevaPosicion = autoAnterior.getX();  // Obtener la posici?n que dej? el auto anterior
                animateCar2(autoActual, nuevaPosicion);   // Mover el auto actual a la nueva posici?n
            }
        }
    }

    // Metodo para obtener el tama?o de la cola de autos (n?mero de autos)
    public int getTamanio() {
        return panCola.getComponentCount() - 4; 
    }

// M?todo para obtener un auto (JLabel) en la posici?n `i`
    public JLabel obtenerAuto(int i) {
        return (JLabel) panCola.getComponent(i + 4); 
    }

    private int calcularPosicionCola(int posicionCola) {
        // Asumamos que el espacio por auto es de 100 p?xeles
        int espacioEntreAutos = 100;
        int xPosBase = 45; // Posici?n inicial de la primera auto en la izquierda
        return xPosBase + (espacioEntreAutos * posicionCola);
    }

    private void actualizarEtiquetas() {
        lblFrente.setText("Frente = " + tcs.getFrente());
        lblFin.setText("Fin = " + tcs.getFin());
    }

    private JLabel obtenerAutoEnFrente() {
        // Iterar por todos los componentes del panel
        for (Component comp : panCola.getComponents()) {
            // Verificar si es un JLabel y no es lblGasolinera ni lblTitulo
            if (comp instanceof JLabel && comp != lblGasera && comp != lblTitulo && comp != lblFrente && comp != lblFin) {
                return (JLabel) comp;  // Retorna el primer JLabel que no sea lblGasolinera ni lblTitulo
            }
        }
        return null;  // Si no hay autos, retorna null
    }

    private void animateCarSalida(JLabel lblAuto) {
        Timer timer = new Timer(10, new ActionListener() {
            int x = lblAuto.getX();

            @Override
            public void actionPerformed(ActionEvent e) {
                if (x > -lblAuto.getWidth()) {
                    // Mover el auto hacia la izquierda
                    lblAuto.setLocation(x -= 5, lblAuto.getY());
                } else {
                    // Detener la animaci?n y eliminar el auto del panel
                    ((Timer) e.getSource()).stop();
                    panCola.remove(lblAuto);
                    panCola.revalidate();
                    panCola.repaint();
                }
            }
        });
        timer.start();
    }

    private void registrarVenta(String tipoGasolina, int litros) {
        switch (tipoGasolina) {
            case "Gasolina A":
                gasolinaA += litros;
                break;
            case "Gasolina B":
                gasolinaB += litros;
                break;
            case "Gasolina C":
                gasolinaC += litros;
                break;
            default:
                System.out.println("Tipo de gasolina no v?lido.");
                break;
        }

    }

    // Metodo para eiminar autos de la cola
    private void eiminarAutosVisualmente() {
        for (Component comp : panCola.getComponents()) {
            // Verificar si es un JLabel y no es lblGasera, lblTitulo, lblFrente o lblFin
            if (comp instanceof JLabel && comp != lblGasera && comp != lblTitulo && comp != lblFrente && comp != lblFin) {
                JLabel lblAuto = (JLabel) comp;
                animateCarSalida(lblAuto); // Animar la salida de cada auto
            }
        }
    }

}
